<?xml version="1.0"?>
<robot name="obstacle" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Arguments -->
  <xacro:arg name="namespace" default="obstacle" />
  <xacro:arg name="traj_x" default="sin(t)" />
  <xacro:arg name="traj_y" default="cos(t)" />
  <xacro:arg name="traj_z" default="2.0" />

  <!-- Color definitions -->
  <material name="grey">
    <color rgba="0.5 0.5 0.5 1"/>
  </material>

  <link name="base_link">
    <inertial>
      <mass value="0.200" />
      <origin xyz="0 0 0" rpy="0 0 0" />
      <inertia ixx="5.8083e-4" ixy="0" ixz="0" iyy="3.0833e-5" iyz="0" izz="5.9083e-4" />
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="$(find dynus)/meshes/obstacles/model4.dae" scale="1.0 1.0 1.0"/>
      </geometry>
    </visual>
  </link>

  <!-- Disable gravity for the obstacle -->
  <gazebo reference="base_link">
    <gravity>0</gravity>
  </gazebo>

  <!-- Custom plugin to move the obstacle along a trefoil trajectory (ref src/sim/move_model.cpp) -->
  <!-- Note: this plugin starts a ros2 node inside and publishes tf data -->
  <gazebo>
    <plugin name="move_model" filename="libmove_model.so">
      <traj_x>$(arg traj_x)</traj_x>
      <traj_y>$(arg traj_y)</traj_y>
      <traj_z>$(arg traj_z)</traj_z>
    </plugin>
  </gazebo>

</robot>